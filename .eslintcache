[{"D:\\react\\sprint_management_tool\\src\\index.js":"1","D:\\react\\sprint_management_tool\\src\\reportWebVitals.js":"2","D:\\react\\sprint_management_tool\\src\\App.js":"3","D:\\react\\sprint_management_tool\\src\\Components\\SprintTrackerGridComponent.js":"4","D:\\react\\sprint_management_tool\\src\\Container\\SprintTrackerGridContainer.js":"5","D:\\react\\sprint_management_tool\\src\\store\\store.js":"6","D:\\react\\sprint_management_tool\\src\\reducer\\reducer.js":"7","D:\\react\\sprint_management_tool\\src\\constants\\constants.js":"8","D:\\react\\sprint_management_tool\\src\\action\\action.js":"9","D:\\react\\sprint_management_tool\\src\\reducer\\index.js":"10","D:\\react\\sprint_management_tool\\src\\Components\\PaginationComponent.js":"11","D:\\react\\sprint_management_tool\\src\\Container\\PagingContainer.js":"12","D:\\react\\sprint_management_tool\\src\\Container\\CreateModalContainer.js":"13","D:\\react\\sprint_management_tool\\src\\Components\\CreateModalComponent.js":"14","D:\\react\\sprint_management_tool\\src\\Components\\SuccessMessageComponent.js":"15","D:\\react\\sprint_management_tool\\src\\Components\\FailMsgBox.js":"16","D:\\react\\sprint_management_tool\\src\\Components\\LoaderComponent.js":"17","D:\\react\\sprint_management_tool\\src\\Components\\VerticalTabComponent.js":"18","D:\\react\\sprint_management_tool\\src\\Container\\SprintProgressGridContainer.js":"19","D:\\react\\sprint_management_tool\\src\\Components\\SprintProgressComponent.js":"20"},{"size":624,"mtime":1611658689771,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":2049,"mtime":1611667158928,"results":"24","hashOfConfig":"22"},{"size":3426,"mtime":1611651124389,"results":"25","hashOfConfig":"22"},{"size":7273,"mtime":1611668403692,"results":"26","hashOfConfig":"22"},{"size":210,"mtime":1609906967225,"results":"27","hashOfConfig":"22"},{"size":1723,"mtime":1611669475404,"results":"28","hashOfConfig":"22"},{"size":310,"mtime":1611654702709,"results":"29","hashOfConfig":"22"},{"size":697,"mtime":1611659893225,"results":"30","hashOfConfig":"22"},{"size":127,"mtime":1609902203993,"results":"31","hashOfConfig":"22"},{"size":813,"mtime":1610684136413,"results":"32","hashOfConfig":"22"},{"size":3234,"mtime":1611667691401,"results":"33","hashOfConfig":"22"},{"size":2983,"mtime":1611495656280,"results":"34","hashOfConfig":"22"},{"size":3804,"mtime":1611494710179,"results":"35","hashOfConfig":"22"},{"size":245,"mtime":1611488744261,"results":"36","hashOfConfig":"22"},{"size":233,"mtime":1611489301196,"results":"37","hashOfConfig":"22"},{"size":199,"mtime":1611650443327,"results":"38","hashOfConfig":"22"},{"size":867,"mtime":1611671215870,"results":"39","hashOfConfig":"22"},{"size":309,"mtime":1611658928119,"results":"40","hashOfConfig":"22"},{"size":153,"mtime":1611658863873,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ehu4ub",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"D:\\react\\sprint_management_tool\\src\\index.js",[],"D:\\react\\sprint_management_tool\\src\\reportWebVitals.js",[],["85","86"],"D:\\react\\sprint_management_tool\\src\\App.js",["87","88","89"],"D:\\react\\sprint_management_tool\\src\\Components\\SprintTrackerGridComponent.js",["90","91"],"import React, {useState} from 'react';\r\nimport '../customCss/SprintGrid.css';\r\nimport ReactDOM from \"react-dom\";\r\nimport LoaderComponent  from './LoaderComponent'\r\n\r\n\r\nfunction SprintTrackerGridComponent(props)\r\n{\r\n   \r\n    \r\n    return (\r\n        \r\n        props.gridData === undefined || props.gridData === null ? <div></div> : \r\n        <div>\r\n          \r\n         <React.Fragment>\r\n            {console.log(props.gridData)}\r\n        <div style={{display:\"flex\"}}>\r\n        <button type=\"button\" className=\"buttonStyle\" onClick={()=>{props.changeState()}}>Create</button>\r\n        <button type=\"button\"   className=\"buttonStyle\">Edit</button>\r\n        <button type=\"button\" className=\"buttonStyle\">Delete</button>\r\n        <button type=\"button\" className=\"btn\" onClick={()=>{props.toCsv()}}></button>\r\n        <button type=\"button\" className=\"Refreshbtn\" onClick={()=>{props.Load()}}></button>\r\n          \r\n        <input type=\"textbox\" className=\"searchTextField\" name=\"searchText\" placeholder=\"Search for Sprint Id\" onInput={props.extractSearchInput}/>\r\n        </div>\r\n        <div >\r\n        <table>\r\n           <thead>\r\n            <tr  key = \"headingTag\"> \r\n              <th ><input type=\"checkbox\"/></th>\r\n              <th onClick={(e)=>{props.changeSortState(\"sprint_id\",e)}} name = \"sprint_id\">Sprint Id</th>\r\n              <th onClick={(e)=>{props.changeSortState(\"sprint_name\",e)}}name = \"sprint_name\">Sprint Name</th>\r\n              <th onClick={(e)=>{props.changeSortState(\"total_items\",e)}}name = \"total_items\">Total Items</th>\r\n              <th onClick={(e)=>{props.changeSortState(\"no_completed_items\",e)}} name = \"no_completed_items\">Total Completed Items </th>\r\n              <th onClick={(e)=>{props.changeSortState(\"no_inprogress_items\",e)}}name = \"no_inprogress_items\">Total InProgress Items</th>\r\n              <th onClick={(e)=>{props.changeSortState(\"no_descoped_items\",e)}} name = \"no_descoped_items\">Total Descoped Items</th>\r\n              \r\n             </tr>\r\n            </thead>\r\n             <tbody>\r\n            { \r\n                \r\n                props.loaderState === true ?<LoaderComponent/> : props.gridData.map((value,index)=>{\r\n                    var checBoxId = index+\"sprintCheck\"\r\n                    \r\n                    return (\r\n                       \r\n                        <tr className = \"rowStyle\" key = {index + \"sprintRow\"} onClick={props.rowSelection}>\r\n                            <td ><input type=\"checkbox\" id = {checBoxId} onChange={props.specificCheckBoxSelection} checked={props.isChecked}/></td>\r\n                            <td id = {index + \"sprintdata\"}>{value.sprint_id}</td>\r\n                            <td id = {index + \"sprintdata\"}> {value.sprint_name}</td>\r\n                            <td id = {index + \"sprintdata\"}> {value.total_items}</td>\r\n                            <td id = {index + \"sprintdata\"} > {value.no_completed_items}</td>\r\n                            <td id = {index + \"sprintdata\"}> {value.no_inprogress_items}</td>\r\n                            <td id = {index + \"sprintdata\"}> {value.no_descoped_items}</td>\r\n                        </tr>\r\n                        \r\n                    )\r\n                })\r\n            }\r\n            </tbody>\r\n        \r\n        </table>\r\n       \r\n       \r\n        \r\n        </div>\r\n       \r\n        </React.Fragment>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SprintTrackerGridComponent;","D:\\react\\sprint_management_tool\\src\\Container\\SprintTrackerGridContainer.js",["92"],"D:\\react\\sprint_management_tool\\src\\store\\store.js",[],"D:\\react\\sprint_management_tool\\src\\reducer\\reducer.js",["93","94"],"D:\\react\\sprint_management_tool\\src\\constants\\constants.js",[],"D:\\react\\sprint_management_tool\\src\\action\\action.js",[],"D:\\react\\sprint_management_tool\\src\\reducer\\index.js",[],"D:\\react\\sprint_management_tool\\src\\Components\\PaginationComponent.js",[],"D:\\react\\sprint_management_tool\\src\\Container\\PagingContainer.js",[],"D:\\react\\sprint_management_tool\\src\\Container\\CreateModalContainer.js",[],"D:\\react\\sprint_management_tool\\src\\Components\\CreateModalComponent.js",["95"],"import React from 'react'\r\nimport cssFile from '../customCss/Modal.css'\r\nexport default function CreateModalComponent(props) {\r\n    \r\n    return (\r\n        <div id=\"modalCreate\" className=\"modal\" >\r\n          \r\n            \r\n          \r\n            <div className=\"modalContent\">\r\n           <div className=\"modalHeader\">\r\n             <h5>  Add New Sprint </h5>   \r\n             <div className=\"close\" onClick={()=>{props.close()}}>&times;</div>\r\n           </div>\r\n           <div className=\"modalBody\">\r\n               <div className=\"Items\">\r\n                  <div className=\"modalLabel\">   Sprint Id : </div >\r\n                   <div>\r\n                   <input name=\"sprint_id\" className=\"inputFieldsCss\" onChange={(e)=>{props.saveData(e)}} type=\"textfield\" required/>\r\n                   </div>\r\n                </div>\r\n                <div className=\"Items\">  \r\n                   <div className=\"modalLabel\">\r\n                   Sprint Name :\r\n                   </div> \r\n                   <div>\r\n                       <input type=\"textfield\" name=\"sprint_name\" onChange={(e)=>{props.saveData(e)}} className=\"inputFieldsCss\" required/>\r\n                   </div>\r\n                 </div>\r\n                 <div className=\"Items\">\r\n                     <div className=\"modalLabel\">\r\n                     Total Items : \r\n                     </div>\r\n                     <div>\r\n                     <input type=\"textfield\" name=\"total_items\" onChange={(e)=>{props.saveData(e)}} className=\"inputFieldsCss\" required/>\r\n                     </div>\r\n                </div>\r\n                <div className=\"Items\">\r\n                     <div className=\"modalLabel\">\r\n                     Total Completed Items:\r\n                     </div>\r\n                     <div>\r\n                     <input type=\"textfield\" name=\"no_completed_items\" onChange={(e)=>{props.saveData(e)}} className=\"inputFieldsCss\"/>\r\n                     </div> \r\n                </div>\r\n                <div className=\"Items\">\r\n                     <div className=\"modalLabel\">\r\n                     Total Inprogress Items:\r\n                     </div> \r\n                     <div>\r\n                         <input type=\"textfield\" name=\"no_inprogress_items\" onChange={(e)=>{props.saveData(e)}} className=\"inputFieldsCss\"/>\r\n                     </div>\r\n\r\n                </div>\r\n                <div className=\"Items\"> \r\n                     <div className=\"modalLabel\">\r\n                      Total Descoped Items: \r\n                     </div>\r\n                     <div>\r\n                         <input type=\"textfield\" name=\"no_descoped_items\" onChange={(e)=>{props.saveData(e)}} className=\"inputFieldsCss\"/>\r\n                     </div>\r\n                </div>\r\n                <div className=\"Items\">\r\n                     <div className=\"modalLabel\">\r\n                     Sprint Status:\r\n                     </div> \r\n                     <div>\r\n                         <select name = \"sprint_status\"  onChange={(e)=>{props.saveData(e)}} className=\"inputFieldsCss\">\r\n                     \r\n                         <option value=\"Active\"> Active</option>\r\n                         <option value=\"Inactive\"> Inactive</option>\r\n                         <option value=\"Completed\"> Completed</option>\r\n                        \r\n                         \r\n                         </select>\r\n                     </div>\r\n                </div>\r\n                <div className=\"Items\">\r\n                    <button type=\"button\" className=\"buttonStyle\" onClick={()=>{props.save(); }}>Save</button>\r\n                    <button type=\"button\" className=\"buttonStyle\" onClick={()=>{props.close()}}>Cancel</button>\r\n                </div>\r\n                \r\n            </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","D:\\react\\sprint_management_tool\\src\\Components\\SuccessMessageComponent.js",[],"D:\\react\\sprint_management_tool\\src\\Components\\FailMsgBox.js",[],"D:\\react\\sprint_management_tool\\src\\Components\\LoaderComponent.js",[],"D:\\react\\sprint_management_tool\\src\\Components\\VerticalTabComponent.js",["96","97"],"D:\\react\\sprint_management_tool\\src\\Container\\SprintProgressGridContainer.js",[],"D:\\react\\sprint_management_tool\\src\\Components\\SprintProgressComponent.js",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":1,"column":8,"nodeType":"104","messageId":"105","endLine":1,"endColumn":12},{"ruleId":"102","severity":1,"message":"106","line":5,"column":8,"nodeType":"104","messageId":"105","endLine":5,"endColumn":16},{"ruleId":"107","severity":1,"message":"108","line":20,"column":9,"nodeType":"109","endLine":20,"endColumn":55},{"ruleId":"102","severity":1,"message":"110","line":1,"column":16,"nodeType":"104","messageId":"105","endLine":1,"endColumn":24},{"ruleId":"102","severity":1,"message":"111","line":3,"column":8,"nodeType":"104","messageId":"105","endLine":3,"endColumn":16},{"ruleId":"112","severity":1,"message":"113","line":137,"column":26,"nodeType":"114","messageId":"115","endLine":137,"endColumn":28},{"ruleId":"116","severity":1,"message":"117","line":20,"column":45,"nodeType":"118","messageId":"119","endLine":20,"endColumn":51},{"ruleId":"116","severity":1,"message":"117","line":25,"column":47,"nodeType":"118","messageId":"119","endLine":25,"endColumn":53},{"ruleId":"102","severity":1,"message":"120","line":2,"column":8,"nodeType":"104","messageId":"105","endLine":2,"endColumn":15},{"ruleId":"102","severity":1,"message":"121","line":2,"column":10,"nodeType":"104","messageId":"105","endLine":2,"endColumn":22},{"ruleId":"102","severity":1,"message":"122","line":2,"column":24,"nodeType":"104","messageId":"105","endLine":2,"endColumn":35},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'CoolTabs' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useState' is defined but never used.","'ReactDOM' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unreachable","Unreachable code.","BreakStatement","unreachableCode","'cssFile' is defined but never used.","'shallowEqual' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]